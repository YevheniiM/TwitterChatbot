version: "3.8"

services:
  db:
      image: mysql:5.7
      restart: always
      container_name: twitter_bot_db
      ports:
        - '3306:3306'
      expose:
        - '3306'
      volumes:
        - my-db:/var/lib/mysql
      env_file:
        - ./.env
  redis:
      restart: unless-stopped
      image: redis:7.0.5-alpine
      expose:
        - 6379
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: twitter_bot_api
    restart: always
    command: bash -c "python src/manage.py migrate && python src/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8003:8000"
    env_file:
      - ./.env
    depends_on:
      - db
  script:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: twitter_bot_listener
    restart: always
    command: bash -c "python src/manage.py shell < src/twitter_app/stream_listener.py"
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - web
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: twitter_bot_celery
    restart: always
    command: bash -c "cd src && celery -A tasks worker --loglevel=INFO"
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
      - script

volumes:
  my-db:
